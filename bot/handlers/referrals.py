from aiogram import Router, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.deep_linking import create_start_link
from database.db import db
from config.config import BOT_USERNAME
import logging

router = Router()


@router.callback_query(lambda c: c.data == "referral_system")
async def referral_handler(callback: types.CallbackQuery):
    try:
        user_id = callback.from_user.id

        # –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        ref_link = f"https://t.me/{BOT_USERNAME}?start=ref_{user_id}"

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_refs, applied_refs, pending_refs = await db.get_user_referral_stats(user_id)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        text = f"""üéÅ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>

<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</b>
<code>{ref_link}</code>

<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥—É —Å—Å—ã–ª–∫—É –≤—ã—à–µ
2. –î—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–π—Ç–∏ –ø–æ –Ω–µ–π –∏ –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è (–ù–µ –≤—Ä—É—á–Ω—É—é!!!)
3. –ö–æ–≥–¥–∞ –æ–Ω –æ–ø–ª–∞—Ç–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É - –≤—ã –ø–æ–ª—É—á–∏—Ç–µ <b>+20 –¥–Ω–µ–π</b>
4. üö® <b>–í–∞–∂–Ω–æ: –î—Ä—É–≥ –¥–æ–ª–∂–µ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤–ø–µ—Ä–≤—ã–µ –∏ —Ç–æ–ª—å–∫–æ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ ‚Äî –∏–Ω–∞—á–µ –±–æ–Ω—É—Å –Ω–µ –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è.</b>

üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚îú –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <b>{total_refs}</b>
‚îú –ë–æ–Ω—É—Å–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: <b>{applied_refs}</b>
‚îî –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: <b>{pending_refs}</b>"""

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        kb = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
                                  url=f"https://t.me/share/url?url={ref_link}&text=–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ LumaVPN —á–µ—Ä–µ–∑ –º–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!")],
            [InlineKeyboardButton(text="üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data=f"copy_ref_{user_id}")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ])

        await callback.message.edit_text(text, reply_markup=kb, parse_mode="HTML")
        await callback.answer()

    except Exception as e:
        logging.error(f"Error in referral handler: {str(e)}", exc_info=True)
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã", show_alert=True)


@router.callback_query(lambda c: c.data.startswith("copy_ref_"))
async def copy_ref_link(callback: types.CallbackQuery):
    user_id = callback.data.split("_")[-1]
    ref_link = f"https://t.me/{BOT_USERNAME}?start=ref_{user_id}"
    await callback.answer(f"–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: {ref_link}", show_alert=True)